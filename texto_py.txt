Una vez Instalado - Se puedo ver en alguna terminal la versión
Agregar la Extensión de Code Runner para hacer correr el codigo mas facilemente con el play (sup derecho)
Como VSCode es un editor vamos a agregar algunas extensiones para darle funcionalidad. 
Bajo la extensión de Python para que pueda ejecutar y listo.
No olvidarse del PATH al instalar para que funcione en cualquier entorno.

Variables y Operadores son base para manejar la programación

Varibles - usamos para almacenar datos - estos pueden ser modificados en cualquier momento
siempre que coincida con el tipo
No es necesario declarar el tipo de datos en las variables. Durante la ejecución se puede cambiar el tipo de la variables

Variables 
Enteros
Flotantes
Cadenas
Booleanos

type() -> para saber el tipo de la variables
print(type(nombrevariable))
str() -> para convertir la variable numero a string y pueda concatenar
En Py se pueden crear cadenas "f" puedo pedir que imprima pero cuando llamamos a la variables
variable(f' texto {variable} texto' ) podemos llamar a dicho operador haciendo de esta manera (f '{var}' )
llamos asi dentro de la llave a la var, pero siempre tengo que colocar la comilla simple.

OPERADORES EN Python
Simbolos que indican como se ejecutan los operandos
operadores Aritméticos
    suma +
    resta -
    multiplicación *
    división /
    módulo %
operadores Lógicos
    and tru - si todos los operandos son true (true and true = true)
    or  tru - si almenos uno de los operando es true (false or false = false)
    not - cambia el valor booleano del operando (not true = false, not false = true)
operadores Relacionales
    parecidos a los operadores lógicos por que devuelven valores Booleanos
    permiten conocer la relación entre las variables
    == compara los elementos si son iguales
    != si los elemenos son distintos
    < <= compara si un elemnto es menor o menor o iguales
    > >= compara si un elemento es mayor o mayor o igual que otro

operadores de Asignación
    se utilizan para asignar un valor a una variable
    sin embargo, si la var tiene un valor previo a la asignación el valor se asignara con el nuevo
    se combinan con los operadores aritmeticos para construir una version mas corta de las declaraciones
    Operador - Ejemplo - Equivalencia
    +=          x+=2        x= x + 2
    -=          x-=2        x= x - 2
    *=          x*=2        x= x*2
    /=          x/=2        x= x/2
    %=          x%=2        x= x%2

Condicionales y Ciclos 

Estructuras mas importantees en la programación
Sin ellos, no podríamos controlar el flujo del programa 
y los bloques de código tendrían que ejecutarse muchas veces

Condicionales Simples y Compuestos - Tipos

Condicionales: Para asegurarnos que se ejecute un bloque de código
If = si - else = si no - elif = si no, si 

C. Simples
    if : Evalúa la () condición
    else : que hacer si no se cumple la condición

    if condicipon:
        instrucción
        ...
    else
        instrucción
        ...
        
CICLOS O BUCLES CON Python

Los ciclos permiten a un programa ajecutar un bloque de codigo varias veces mientras se 
cumple determinada condición. Si en algun momento necesitas cambiar la condición, simplemente
debes hacerlo una vez y el programa seguirá funcionando sin ningún inconveniente.
PYTHON CUENTA CON DOS TIPOS DE CICLOS: FOR - WHILE

CICLO FOR, cuenta con tres partes:
i -> es una variable que puede tener cualquier otro nombrevariable
in -> es una palabra "reservada", es decir siempre debe Estructuras
el Elemento -> es el que se va a iterar, puede ser una lista, una secuencia de números, etc.

CICLO WHILE 
Revisa la condición que es dada: si es Verdadera Ejecuta las Instrucciones 
entonces cuenta la ejecución del ciclo y luego vuelve a revisar si se cumple la condición
Este proceso se repie hasta que la condición sea FALSA
Inicio
Condicion (True o False)
True -> se Ejecuta la condición
suma una iteración
Evalúa la condición
False -> sale del bucle (FIN)
Util cuando no sabemos cuantas veces debe ecutarse el BUCLES
WHILE condition:
    cuerpo del bucle

Actividad 3. Mi promedio universitario
Bienvenido a la tercera actividad del curso de Python. En esta ocasión, pondrás en práctica los conocimientos adquiridos hasta el momento. Aplicarás habilidades relacionadas con el uso de variables para almacenar información, operadores para manipular variables, así como condicionales y ciclos para resolver problemas específicos.

Caso
Imagina que culminaste el 5º semestre de la universidad, en el cual viste las siguientes asignaturas: Seguridad Informática, Ingeniería Web, Inteligencia Artificial, Programación Móvil y Redes; y las notas fueron las siguientes: 5.0, 4.5, 3.6, 3.9 y 4.3 respectivamente. 

 

Teniendo claro esto, escribe un programa que solicite tu nombre completo, el nombre de las cinco materias y la calificación de cada una. Y como resultado devuelve tu nombre y el promedio obtenido en el semestre.

 

Recuerda que la fórmula para calcular el promedio es: 

Promedio = (Nota1 + Nota2 + Nota3 + Nota4 + Nota5)/Cantidad de notas

Instrucciones
Observa el siguiente instructivo, donde se explicara el porqué, el cómo y el paso a paso de cada línea de código que escribirás:

Ingresa a PyCharm y en la carpeta “Actividades” cree un nuevo archivo con el nombre “actividad_ciclos.py”.

Define la variable nombre, la cual almacenará el nombre completo del usuario. Después crea otra variable llamada materias inicializada con el número 5.

Ahora, define dos variables con los siguientes nombres: contador y sumatoria, la primera se encargará de iterar y la segunda irá sumando las calificaciones ingresadas.
Crea el ciclo while, el cual se detendrá después de iterar 5 veces. Dentro del ciclo se va a solicitar el nombre de cada materia y la calificación. Después se sumará cada calificación y se aumentará el contador para que el ciclo no sea infinito.

Realiza el cálculo del promedio e imprima los resultados:

Después de digitar los valores proporcionados, realice un comentario de una línea dentro del programa y responde la siguiente pregunta ¿Cuál es tu nombre y qué promedio obtuviste?

Sube tu código a la plataforma para su evaluación.